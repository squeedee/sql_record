= SQLRecord

Do you use ActiveRecord::Connection.execute for speed sometimes?

Does it bother you that the results are not mapped to your schema and type-cast as ActiveRecord would?

Well that's what SQLRecord does.

== Example

    def UserWithDefaultRole
      include Visfleet::SQLRecord

      with_class User do
          column :id                               # UserWithDefaultRole#id -> User#id
          column :user_name, :from => :name        # UserWithDefaultRole#user_name -> User#name
          column :created_at                       # UserWithDefaultRole#created_at -> User#created_at
      end

      with_class Role do
          column :default_role, :from => :name     # UserWithDefaultRole#default_role -> Role#name
      end

      query do |params|
        [
          "SELECT users.id, users.name as user_name, users.created_at, roles.name as default_role " +
          "FROM users INNER JOIN roles " +
          "ON users.default_role_id = role.id " +
          "WHERE users.id = ? AND users.created_at > ?",
          params[:id],
          params[:created_after]
        ]
      end

    end



== Contributing to sql-record
 
* Check out the latest master to make sure the feature hasn't been implemented or the bug hasn't been fixed yet
* Check out the issue tracker to make sure someone already hasn't requested it and/or contributed it
* Fork the project
* Start a feature/bugfix branch
* Commit and push until you are happy with your contribution
* Make sure to add tests for it. This is important so I don't break it in a future version unintentionally.
* Please try not to mess with the Rakefile, version, or history. If you want to have your own version, or is otherwise necessary, that is fine, but please isolate to its own commit so I can cherry-pick around it.

== Copyright

Copyright (c) 2011 vWorkApp. See LICENSE.txt for
further details.

