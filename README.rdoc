= SQLRecord

Do you use ActiveRecord::Connection.execute for speed sometimes?

Does it bother you that the results are not mapped to your schema and type-cast as ActiveRecord would?

Well that's what SQLRecord does.

== Example

    class UserWithAccount << SQLRecord::Base

      with_opts :class => User do
        column :id
        column :user_email, :from => :email
        column :created_at
      end

      with_opts :class => Account do
        column :account_name, :from => :name
      end

      column :account_id, :from => :id, :class => Account

      query do |params|
        [
          "SELECT #{sql_select_columns.join(', ')} " +
          "FROM users INNER JOIN accounts " +
          "ON users.account_id = accounts.id " +
          "WHERE users.id = ?",
          params[:id]
        ]
      end

    end

== Usage

    $ script.console
    > a = UserWithAccount.find(:id => 1)
    > a[0].created_at.class
    => Time


== Contributers

Thanks to {Loren Segal}[http://gnuu.org] for the big code review, and making me aware that sound OO principles are not dead in ruby.

== Contributing to sql-record
 
* Check out the latest master to make sure the feature hasn't been implemented or the bug hasn't been fixed yet
* Check out the issue tracker to make sure someone already hasn't requested it and/or contributed it
* Fork the project
* Start a feature/bugfix branch
* Commit and push until you are happy with your contribution
* Make sure to add tests for it. This is important so I don't break it in a future version unintentionally.
* Please try not to mess with the Rakefile, version, or history. If you want to have your own version, or is otherwise necessary, that is fine, but please isolate to its own commit so I can cherry-pick around it.

== Copyright

Copyright (c) 2011 vWorkApp. See LICENSE.txt for
further details.

